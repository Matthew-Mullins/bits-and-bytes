{"version":3,"sources":["components/NavBar.js","utility/utility.js","components/Header.js","components/Hardware.js","components/Hardwares.js","components/Body.js","components/Content.js","Game.js","index.js"],"names":["NavBar","onChange","className","onClick","Game","ContentEnum","HARDWARES","CURRENCY_SUFFIX","THOUSAND","MILLION","BILLION","TRILLION","QUADRILLION","QUINTILLION","SEXTILLION","SEPTILLION","OCTILLION","NONILLION","DECILLION","truncateCurrency","value","result","suffix","prev_suffix","key","Object","freeze","toHourMinSec","time_ms","hour","mins","secs","Math","floor","hour_r","mins_r","ceil","String","padStart","Header","currCurrency","style","color","toFixed","Hardware","props","interval","hardware","localState","window","localStorage","getItem","type","state","JSON","parse","name","initial_cost","coefficient","initial_time","initial_revenue","initial_storage","has_started","quantity","cost","cost_scale","time","start_time","time_left","revenue","revenue_scale","is_managed","this","upgrade","startInterval","now","Date","getTime","setState","setInterval","update","purchase","num_times","quantity_increase","new_cost","i","updateRevenue","gainRevenue","clearInterval","start","setItem","stringify","new_revenue","id","React","Component","Hardwares","useState","hardwares","map","Body","contentToShow","Content","new_content","cur_content","curr_cost","purchase_cost","getCost","curr_currency","new_currency","revenue_gained","life_currency","term_currency","start_life_currency","storage_space","FACILITIES","UPGRADES","UNLOCKS","INVESTORS","STATS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56bf2f1a.chunk.js","sourcesContent":["import Game from '../Game'\r\n\r\nconst NavBar = ({ onChange }) => {\r\n    return (\r\n        <div className='navbar'>\r\n            <button onClick={() => onChange(Game.ContentEnum.HARDWARES)}>HARDWARE</button>\r\n            <button onClick={() => onChange('oaml')}>FACILITIES</button>\r\n            <button onClick={() => onChange('oaml')}>UPGRADES</button>\r\n            <button onClick={() => onChange('oaml')}>UNLOCKS</button>\r\n            <button onClick={() => onChange('oaml')}>STATS</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","const CURRENCY_SUFFIX = {\r\n    THOUSAND:   10 ** 3,\r\n    MILLION:    10 ** 6,\r\n    BILLION:    10 ** 9,\r\n    TRILLION:   10 ** 12,\r\n    QUADRILLION:10 ** 15,\r\n    QUINTILLION:10 ** 18,\r\n    SEXTILLION: 10 ** 21,\r\n    SEPTILLION: 10 ** 24,\r\n    OCTILLION:  10 ** 27,\r\n    NONILLION:  10 ** 30,\r\n    DECILLION:  10 ** 33\r\n}\r\n\r\nexport function truncateCurrency(value) {\r\n    let result = 0\r\n    let suffix = ''\r\n    let prev_suffix = ''\r\n    for (let key in CURRENCY_SUFFIX) {\r\n        if (value < CURRENCY_SUFFIX[key]) {\r\n            result = value / (CURRENCY_SUFFIX[key] / 1000)\r\n            suffix = prev_suffix\r\n            break\r\n        }\r\n        prev_suffix = key\r\n    }\r\n    let tuple = Object.freeze({value: result, suffix: suffix})\r\n    return tuple\r\n}\r\n\r\nexport function truncateStorage(value) {\r\n    return\r\n}\r\n\r\nexport function toHourMinSec(time_ms) {\r\n    let hour = 0\r\n    let mins = 0\r\n    let secs = 0\r\n\r\n    hour = Math.floor(time_ms / (3.6 * (10 ** 6)))\r\n    let hour_r = time_ms % (3.6 * (10 ** 6))\r\n\r\n    mins = Math.floor(hour_r / (60000))\r\n    let mins_r = hour_r % 60000\r\n\r\n    secs = Math.ceil(mins_r / (1000))\r\n\r\n    let output = String(hour).padStart(2, '0') + ':' + String(mins).padStart(2, '0') + ':' + String(secs).padStart(2, '0')\r\n\r\n    return output\r\n}\r\n\r\nexport function getCost(quantity, curr_cost, coefficient) {\r\n    let new_cost = curr_cost\r\n    for (let i = 0; i < quantity - 1; i++) {\r\n        new_cost *= coefficient\r\n    }\r\n    return new_cost\r\n}","import { truncateCurrency } from '../utility/utility'\r\n\r\nconst Header = ({ currCurrency }) => {\r\n    return (\r\n        <div className='header'>\r\n            <h1 style={{color: 'white'}}>{String(truncateCurrency(currCurrency).value.toFixed(2)).padStart(6, '0')}</h1>\r\n            <h1 style={{color: 'white'}}>{truncateCurrency(currCurrency).suffix}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { truncateCurrency, toHourMinSec } from '../utility/utility.js'\r\n\r\n// type: 'vaccuum_tube',\r\n// name: 'Vaccuum Tube',\r\n// initial_cost: 3.738,\r\n// coefficient: 1.07,\r\n// initial_time: 1.0,\r\n// initial_revenue: 1.0,\r\n// initial_storage: 1\r\n\r\nclass Hardware extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props = props\r\n        this.interval = null\r\n        let hardware = this.props.hardware\r\n        const localState = window.localStorage.getItem(hardware.type);\r\n        if (localState !== null) {\r\n            this.state = JSON.parse(localState)\r\n        } else {\r\n            this.state = {\r\n                type: hardware.type,\r\n                name: hardware.name,\r\n                initial_cost: hardware.initial_cost,\r\n                coefficient: hardware.coefficient,\r\n                initial_time: hardware.initial_time,\r\n                initial_revenue: hardware.initial_revenue,\r\n                initial_storage: hardware.initial_storage,\r\n                has_started: false,\r\n                quantity: 0,\r\n                cost: hardware.initial_cost,\r\n                cost_scale: 1,\r\n                time: hardware.initial_time,\r\n                start_time: 0,\r\n                time_left: 0,\r\n                revenue: 0,\r\n                revenue_scale: 1,\r\n                is_managed: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.type == 'vaccuum_tube' && this.state.quantity == 0) {\r\n            this.upgrade(1)\r\n        }\r\n        if (this.state.has_started) {\r\n            this.startInterval()\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this.state.has_started || this.state.quantity <= 0) {\r\n            return\r\n        }\r\n        let d = new Date()\r\n        let now = d.getTime()\r\n        this.setState({\r\n            has_started: true,\r\n            start_time: now,\r\n            time_left: this.state.time\r\n        }, () => this.startInterval())\r\n    }\r\n\r\n    startInterval() {\r\n        this.interval = setInterval(() => {\r\n            this.update()\r\n        }, (1 / 60))\r\n    }\r\n\r\n    purchase(quantity) {\r\n        if (this.props.purchase(quantity, this.state.cost, this.state.coefficient)) {\r\n            this.upgrade(quantity)\r\n        }\r\n    }\r\n\r\n    upgrade(num_times) {\r\n        let quantity_increase = 0\r\n        let new_cost = this.state.cost\r\n        for (let i = 0; i < num_times; i++) {\r\n            quantity_increase += 1\r\n            new_cost *= this.state.coefficient\r\n        }\r\n        this.setState({\r\n            quantity: this.state.quantity + quantity_increase,\r\n            cost: new_cost\r\n        }, () => this.updateRevenue())\r\n    }\r\n\r\n    update() {\r\n        if (!this.state.has_started) {\r\n            return\r\n        }\r\n        let d = new Date()\r\n        let now = d.getTime()\r\n        let time_left = (this.state.time * 1000) - (now - this.state.start_time)\r\n        this.setState({\r\n            time_left: time_left <= 0 ? 0 : time_left\r\n        })\r\n        if (time_left <= 0) {\r\n            this.setState({\r\n                has_started: false\r\n            })\r\n            this.props.gainRevenue(this.state.revenue)\r\n            clearInterval(this.interval)\r\n            if (this.state.is_managed) {\r\n                this.start()\r\n            }\r\n        }\r\n        localStorage.setItem(this.state.type, JSON.stringify(this.state))\r\n    }\r\n\r\n    updateRevenue() {\r\n        let new_revenue = this.state.initial_revenue * this.state.quantity * this.state.revenue_scale\r\n        this.setState({\r\n            revenue: new_revenue\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='hardware'>\r\n                <button id=\"start-button\" onClick={() => this.start()} ><h5>START</h5></button>\r\n                <div id=\"content\">\r\n                    <h3 id=\"name\">{'[' + this.state.quantity + '] ' + this.state.name}</h3>\r\n                    <h3 id=\"time_left\">{toHourMinSec(this.state.time_left)}</h3>\r\n                    <h3 id=\"time_left_suffix\">HH:MM:SS</h3>\r\n                    <button id=\"purchase_button\" onClick={() => this.purchase(1)}>\r\n                        <h3 id=\"buy\">\r\n                            BUY 1\r\n                        </h3>\r\n                        <h3 id=\"cost\">\r\n                            { String(truncateCurrency(this.state.cost).value.toFixed(2)).padStart(6, 0)}\r\n                        </h3>\r\n                        <h3 id=\"cost_suffix\">\r\n                            { truncateCurrency(this.state.cost).suffix }\r\n                        </h3>\r\n                    </button>\r\n                    <h3 id=\"revenue\">\r\n                            { String(truncateCurrency(this.state.revenue).value.toFixed(2)).padStart(6, 0)}\r\n                        </h3>\r\n                    <h3 id=\"revenue_suffix\">\r\n                        { truncateCurrency(this.state.revenue).suffix }\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n}\r\nexport default Hardware","import { useState } from 'react'\r\nimport Hardware from './Hardware'\r\n\r\nconst Hardwares = ({ gainRevenue, purchase }) => {\r\n    const [hardwares, setHardwares] = useState(\r\n        [\r\n            {\r\n                type: 'vaccuum_tube',\r\n                name: 'Vaccuum Tube',\r\n                initial_cost: 3.738,\r\n                coefficient: 1.07,\r\n                initial_time: 1.0,\r\n                initial_revenue: 1.0,\r\n                initial_storage: 1\r\n            },\r\n            {\r\n                type: 'magnetic_core',\r\n                name: 'Magnetic Core',\r\n                initial_cost: 46.73,\r\n                coefficient: 1.15,\r\n                initial_time: 3.20,\r\n                initial_revenue: 14.50,\r\n                initial_storage: 128\r\n            },\r\n            {\r\n                type: 'semiconductor',\r\n                name: 'Semiconductor',\r\n                initial_cost: 584.06,\r\n                coefficient: 1.14,\r\n                initial_time: 10.24,\r\n                initial_revenue: 210.25,\r\n                initial_storage: 16384\r\n            },\r\n            {\r\n                type: 'magnetic_dict',\r\n                name: 'Magnetic Disk',\r\n                initial_cost: 7300.78,\r\n                coefficient: 1.13,\r\n                initial_time: 32.77,\r\n                initial_revenue: 3048.63,\r\n                initial_storage: 2097152\r\n            },\r\n            {\r\n                type: 'optical_disk',\r\n                name: 'Optical Disk',\r\n                initial_cost: 91259.77,\r\n                coefficient: 1.12,\r\n                initial_time: 104.86,\r\n                initial_revenue: 44205.06,\r\n                initial_storage: 268435456\r\n            },\r\n            {\r\n                type: 'flash_drive',\r\n                name: 'Flash Drive',\r\n                initial_cost: 1140747.07,\r\n                coefficient: 1.11,\r\n                initial_time: 335.54,\r\n                initial_revenue: 640973.41,\r\n                initial_storage: 34359738368\r\n            },\r\n            {\r\n                type: 'solid_state_drive',\r\n                name: 'Solid State Drive',\r\n                initial_cost: 14259338.38,\r\n                coefficient: 1.10,\r\n                initial_time: 1073.74,\r\n                initial_revenue: 9294114.39,\r\n                initial_storage: 4398046511104\r\n            },\r\n            {\r\n                type: 'data_silo',\r\n                name: 'Data Silo',\r\n                initial_cost: 178241729.74,\r\n                coefficient: 1.09,\r\n                initial_time: 3435.97,\r\n                initial_revenue: 134764658.66,\r\n                initial_storage: 562949953421312\r\n            },\r\n            {\r\n                type: 'data_lake',\r\n                name: 'Data Lake',\r\n                initial_cost: 2228021621.70,\r\n                coefficient: 1.08,\r\n                initial_time: 10995.12,\r\n                initial_revenue: 1954097550.63,\r\n                initial_storage: 72057594037927900\r\n            },\r\n            {\r\n                type: 'cloud_data',\r\n                name: 'Cloud Data',\r\n                initial_cost: 27850270271.30,\r\n                coefficient: 1.07,\r\n                initial_time: 35184.37,\r\n                initial_revenue: 28334269484.12,\r\n                initial_storage: 9223372036854780000\r\n            }\r\n        ]\r\n    )\r\n\r\n    return (\r\n        <div className=\"hardwares\">\r\n            {hardwares.map((hardware) => (\r\n                <Hardware key={hardware.type} hardware={hardware} gainRevenue={gainRevenue} purchase={purchase}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hardwares","import PropTypes from 'prop-types'\r\nimport Game from '../Game.js'\r\nimport Hardwares from './Hardwares'\r\nconst Body = ({ contentToShow, gainRevenue, purchase }) => {\r\n    return (\r\n        <div className='body'>\r\n            {contentToShow === Game.ContentEnum.HARDWARES && <Hardwares gainRevenue={gainRevenue} purchase={purchase}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// Body.defaultProps = {\r\n//     contentToShow: ContentEnum.HARDWARE\r\n// }\r\n\r\n// Body.propTypes = {\r\n//     contentToShow: ContentEnum.HARDWARE\r\n// }\r\n\r\nexport default Body","import Header from './Header'\r\nimport Body from './Body'\r\n\r\n\r\nconst Content = ({ contentToShow, currCurrency, gainRevenue, purchase }) => {\r\n    return (\r\n        <div className='content'>\r\n            <Header currCurrency={currCurrency}/>\r\n            <Body contentToShow={contentToShow} gainRevenue={gainRevenue} purchase={purchase}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react'\r\nimport NavBar from './components/NavBar'\r\nimport Content from './components/Content'\r\n\r\nimport { getCost } from './utility/utility'\r\n\r\n// import Facilities from './components/Facilities'\r\n\r\nclass Game extends React.Component {\r\n    static ContentEnum = {\r\n        HARDWARES: 0,\r\n        FACILITIES: 1,\r\n        UPGRADES: 2,\r\n        UNLOCKS: 3,\r\n        INVESTORS: 4,\r\n        STATS: 5\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const localState = localStorage.getItem('game_data')\r\n        if (localState !== null) {\r\n            this.state = JSON.parse(localState)\r\n        } else {\r\n            this.state = {\r\n                curr_currency: 0,\r\n                life_currency: 0,\r\n                term_currency: 0,\r\n                start_life_currency: 0,\r\n                storage_space: 0,\r\n                cur_content: Game.ContentEnum.HARDWARES\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = (new_content) => {\r\n        this.setState({\r\n            cur_content: new_content\r\n        })\r\n    }\r\n\r\n    purchase = (quantity, curr_cost, coefficient) => {\r\n        let purchase_cost = getCost(quantity, curr_cost, coefficient)\r\n        if (this.state.curr_currency < purchase_cost) {\r\n            return false\r\n        }\r\n        let new_currency = this.state.curr_currency - purchase_cost\r\n        this.setState({\r\n            curr_currency: new_currency\r\n        }, () => localStorage.setItem('game_data', JSON.stringify(this.state)))\r\n        return true\r\n    }\r\n\r\n    gainRevenue = (revenue_gained) => {\r\n        this.setState({\r\n            curr_currency: this.state.curr_currency + revenue_gained,\r\n            life_currency: this.state.life_currency + revenue_gained,\r\n            term_currency: this.state.term_currency + revenue_gained\r\n        }, () => localStorage.setItem('game_data', JSON.stringify(this.state)))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <NavBar onChange={this.onChange}/>\r\n                <Content contentToShow={this.state.cur_content} currCurrency={this.state.curr_currency} gainRevenue={this.gainRevenue} purchase={this.purchase}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(\n  <Game/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}